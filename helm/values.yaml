global:
  DRD_CLOUD_API_TOKEN: ""
  DRD_CLOUD_API_HOST: "https://agent-api.drdroid.io"
  NATIVE_KUBERNETES_API_MODE: "true"

  # Global node scheduling configuration
  # Applied to all services (redis, celery-beat, celery-worker)
  # Example nodeSelector:
  # nodeSelector:
  #   "worker-type": "aux-pool"
  #   "kubernetes.io/os": "linux"
  nodeSelector: {}

  # Example tolerations:
  # tolerations:
  #   - key: "dedicated"
  #     operator: "Equal"
  #     value: "infra"
  #     effect: "NoSchedule"
  tolerations: []

# Network Mapper Configuration
# Controls whether the network mapper components are deployed
# The network mapper provides service topology visibility and network insights
# Default: enabled (recommended for full functionality)
networkMapper:
  enabled: false

# Auto Update Configuration
# Controls whether automatic deployment updates (restart cronjob) are enabled
# When enabled, deployments are automatically restarted on schedule to pick up new images
# Default: enabled (automatic updates for latest images)
autoUpdate:
  enabled: false
  schedule: "0 0 * * *"  # every day at 00:00 UTC

celery-beat:
  image:
    repository: drdroidlab/drd-vpc-agent
    tag: latest
    pullPolicy: Always

celery-worker:
  image:
    repository: drdroidlab/drd-vpc-agent
    tag: latest
    pullPolicy: Always
  # Resource configuration for celery worker containers
  resources:
    scheduler:
      # Lightweight task scheduler - handles task distribution and scheduling
      requests:
        cpu: "200m"
        memory: "256Mi"
      limits:
        cpu: "800m"
        memory: "896Mi"
    taskExecutor:
      # Task executor for high-priority tasks - handles execution of critical tasks
      requests:
        cpu: "250m"
        memory: "256Mi"
      limits:
        cpu: "1500m"
        memory: "1Gi"
    assetExtractor:
      # Asset extraction worker - handles long-running asset discovery and extraction tasks
      requests:
        cpu: "250m"
        memory: "256Mi"
      limits:
        cpu: "1500m"
        memory: "1Gi"

redis:
  image: redis:7.2